@charset "UTF-8";
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/*
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 8/9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

th,
td {
  padding: 0; }

html {
  line-height: 1.6;
  font-size: 10px;
  background-color: #FCFBFB; }

body {
  font-size: 1.6rem; }

h2 {
  line-height: 1.4;
  margin: 2.5em 0 0.5em;
  text-align: center;
  color: #E63617;
  font-weight: normal;
  font-size: 150%; }

h3 {
  margin: 2.5em 0 0.875em;
  color: #89200e;
  font-weight: normal;
  font-size: 2rem; }
  h2 + h3 {
    margin-top: 1.25em; }

h4 {
  margin: 2em 0 1em;
  color: #441007;
  font-weight: bold;
  font-size: 100%; }

p {
  text-align: justify;
  margin-top: 1.75em;
  margin-bottom: 1.75em; }

hr {
  border: none;
  border-bottom: 1px solid #ccc; }

a {
  text-decoration: none;
  color: #009ED2; }
  a:visited {
    color: #2e89ad; }
  a:hover {
    color: #00789f; }
  a:active {
    color: #00b1ec; }

code {
  line-height: 1.2;
  display: inline-block;
  margin: 0 0.125em;
  padding: 0 0.25em;
  border: 1px solid #ccc;
  border-radius: 2px; }

pre {
  x-overflow: auto;
  padding: 0.75em 1em;
  border-radius: 3px;
  color: #fff;
  background-color: #360d05; }
  pre code {
    padding: 0;
    border: 0px; }

ins {
  text-decoration: none; }

ul,
ol {
  padding-left: 1.5em; }

blockquote {
  position: relative;
  margin: 1em 0;
  padding: 0.5em 3em;
  border-radius: 3px;
  background-color: #eae8e7; }
  blockquote:before, blockquote:after {
    position: absolute;
    line-height: 1;
    color: #968e89;
    font-family: serif;
    font-size: 3em; }
  blockquote:before {
    left: 0.375em;
    content: '“'; }
  blockquote:after {
    bottom: -0.25em;
    right: 0.375em;
    content: '”'; }

table {
  margin: 2em auto;
  border-top: 1px solid #cbc7c4; }

th, td {
  padding: 0.5em;
  border-bottom: 1px solid #cbc7c4; }

th {
  border-bottom-width: 2px;
  background-color: #e5e3e2; }

.layout-signal {
  position: absolute;
  top: 0;
  right: 0;
  padding: 0.25em 0.5em;
  color: #fff;
  background-color: rgba(0, 0, 0, 0.6); }

.container {
  margin-right: 10px;
  margin-bottom: 4em;
  margin-left: 10px; }

.main {
  display: block;
  max-width: 40em;
  margin-right: auto;
  margin-left: auto; }

hr.postscript {
  margin-top: 1em;
  padding-top: 1em;
  border-width: 0; }

.pager {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
  max-width: 40em;
  margin: 2em auto; }
  .pager_label-newer, .pager_label-older {
    display: block;
    font-size: 87.5%;
    color: #968e89; }
  .pager_nextItem, .pager_prevItem {
    margin-right: -10px;
    margin-left: -10px;
    line-height: 1.2;
    display: block;
    padding: 0.5em 1.5em;
    background-repeat: no-repeat;
    background-position: 99% 50%; }
  .pager_nextItem {
    background-image: url("/assets/img/arrow-right.svg"); }
  .pager_prevItem {
    background-image: url("/assets/img/arrow-left.svg");
    background-position: 1% 50%; }

.articleGroup + .articleGroup {
  margin-top: 5em; }

.notics, .notics-alert {
  padding: 0.75em;
  border: 1px solid;
  border-radius: 3px;
  background-color: #FFF; }

.notics {
  border-color: #cbc7c4; }
  .notics-alert {
    border-color: #aa786d; }

.annotation {
  color: #62554e;
  font-size: 87.5%; }

.links {
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  border-top: 1px solid #cbc7c4;
  border-bottom: 1px solid #cbc7c4; }
  .links > dt {
    font-weight: bold;
    font-size: 87.5%; }
  .links > dd {
    margin-left: 0; }

.siteHeader {
  background-color: #FFF;
  padding-top: 1em;
  padding-bottom: 1em; }
  .siteHeader.is-top {
    border-bottom: 1px solid #eae8e7; }

#siteSign {
  margin: 0;
  padding-left: 10px;
  font-size: 100%; }
  #siteSign-media {
    width: auto;
    max-height: 1.5em; }
    .is-top #siteSign-media {
      margin: 0.675em 0;
      max-height: 3em;
      text-align: center; }

.siteFooter {
  clear: both; }

.site-auther {
  text-align: center; }
  .site-auther-avatar {
    width: 3.75em;
    height: auto; }
  .site-auther-name {
    line-height: 1;
    vertical-align: 1.375em; }

.footer-heading {
  margin: 1.5em 0 0.5em;
  text-align: center;
  color: #968582;
  font-weight: 500;
  font-size: 125%; }

.contact-list {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
  display: table;
  width: 100%;
  max-width: 24em;
  margin-right: auto;
  margin-left: auto;
  padding-right: 10px;
  padding-left: 10px;
  box-sizing: border-box; }
  .contact-list > li {
    display: table-cell;
    width: 25%;
    text-align: center; }

#copyright {
  text-align: center;
  font-size: 75%; }

.cat_title {
  margin-top: 0;
  margin-bottom: 0;
  padding-bottom: 1em;
  border-bottom: 1px solid #eae8e7;
  text-align: center;
  font-size: 2rem;
  background-color: #FFF; }

.articleList {
  list-style: none;
  margin-left: 0;
  padding-left: 0; }
  .articleList-item {
    margin-right: auto;
    margin-bottom: 2em;
    margin-left: auto;
    max-width: 640px; }
  .articleList-title {
    line-height: 1.3;
    margin: 0;
    color: #E63617;
    font-weight: normal;
    font-size: 125%; }
    @media screen and (min-width: 40em) {
      .articleList-title {
        line-height: 1.4;
        font-size: 150%; } }
    .articleList-title a {
      display: block;
      color: #E63617; }
      .articleList-title a:hover {
        color: #eb5e45; }
  .articleList-desc {
    display: block;
    margin-top: 0.5em;
    color: #736a75;
    font-size: 75%; }
    .articleList-desc:hover {
      color: #8f8891; }
  .articleList_cat-key {
    color: #736a75; }

.hero {
  vertical-align: bottom;
  max-width: 100%;
  height: auto;
  margin-top: 1em;
  background-color: #E63617; }

.publishedDatetime,
.updatedDatetime {
  display: inline-block;
  margin: 0 0 0.675em;
  font-weight: normal;
  font-size: 87.5%; }

.updatedDatetime:before {
  content: '/'; }

.more {
  max-width: 640px;
  margin-right: auto;
  margin-left: auto;
  text-align: right; }
  .more a {
    display: block;
    padding: 0.5em 0;
    border-top: 1px solid #e5e3e2;
    color: #009ED2; }

.article-title {
  line-height: 1.3;
  margin: 0;
  color: #E63617;
  font-weight: normal;
  font-size: 125%; }
  @media screen and (min-width: 40em) {
    .article-title {
      line-height: 1.4;
      font-size: 150%; } }
  .article-title a {
    color: #E63617; }

.article-header {
  margin-right: -10px;
  margin-left: -10px;
  color: #fff;
  background-color: #E63617; }
  .article-header h1 {
    color: #fff; }
  .article-header-section {
    max-width: 40em;
    margin-right: auto;
    margin-left: auto;
    padding: 1em 1em; }

.content-main {
  max-width: 40em;
  margin-right: auto;
  margin-left: auto; }

.image_holder {
  margin-right: -10px;
  margin-left: -10px; }
  .image_holder img {
    width: 100%;
    height: auto;
    box-sizing: border-box; }

.is-tools #site-sign_media {
  max-height: 1.5em; }

.toolList {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
  margin-bottom: 2em; }
  @media screen and (min-width: 40em) {
    .toolList {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: row;
          flex-direction: row;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  @media screen and (min-width: 40em) {
    .toolList_item {
      display: -ms-flexbox;
      display: flex;
      width: 47%; } }
  .toolList_item > a {
    display: block;
    margin-bottom: 1em;
    padding: 10px 10px 15px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    background-color: #fff;
    -webkit-transition-property: box-shadow;
    -webkit-transition-duration: 0.3s;
    -webkit-transition-timing-function: ease;
    transition-property: box-shadow;
    transition-duration: 0.3s;
    transition-timing-function: ease; }
    .toolList_item > a:hover {
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); }
    @media screen and (min-width: 40em) {
      .toolList_item > a {
        width: 100%; } }
  .toolList_media {
    position: relative;
    width: 100%;
    height: 176px;
    text-align: center;
    background-color: #E63617; }
    .toolList_media img {
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
      margin: auto;
      max-width: 80%; }
  .toolList_name {
    margin-top: 0.5em;
    margin-bottom: 0;
    text-align: right;
    color: #2D1C13;
    font-size: 1.8rem; }

.tool-hero {
  padding-top: 2em;
  margin-bottom: 1em;
  text-align: center; }
  .tool-hero img {
    width: 80%;
    max-height: 120px; }
  @media screen and (min-width: 40em) {
    .tool-hero img {
      width: 320px;
      height: auto; } }

.toolName {
  line-height: 1.2;
  margin: 0;
  padding: 0.25em 10px 0.375em;
  font-weight: 400;
  font-family: "Helvetica Neue", Helvetica, Arial;
  font-size: 6.4rem; }
  @media screen and (min-width: 40em) {
    .toolName {
      text-align: center; } }

.tool_data {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
  margin: 0;
  text-align: center;
  font-size: 75%; }
  .tool_data > li {
    display: inline-block; }

.tool-shortString {
  text-align: center; }

.downloadLink {
  max-width: 320px;
  margin: 1em auto; }

.btn_toolDownload {
  display: inline-block;
  padding: 0.75em 0.5em;
  border-radius: 3px;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
  text-align: center;
  color: #fff !important;
  background-color: #441007;
  -webkit-transition-property: all;
  -webkit-transition-duration: 0.3s;
  -webkit-transition-timing-function: ease;
  transition-property: all;
  transition-duration: 0.3s;
  transition-timing-function: ease;
  display: block; }
  .btn_toolDownload:hover, .btn_toolDownload:active {
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    color: #FFF;
    background-color: #562820; }

.versionHistory {
  list-style-type: disc;
  font-size: 1.4rem; }
  .versionHistory dt {
    margin-top: 1em;
    color: #E63617;
    font-weight: bold; }
  .versionHistory dd {
    display: list-item;
    margin-left: 1.5em; }

.socialButtons {
  margin: 3em auto 2em;
  text-align: center; }
  .socialButtons_twitter, .socialButtons_facebook, .socialButtons_hatebu, .socialButtons_googlep {
    line-height: 1;
    display: inline-block;
    vertical-align: bottom;
    padding: 0 5px; }

.twitter-tweet {
  margin-right: auto;
  margin-left: auto; }

.article-taxonomy {
  max-width: 40em;
  margin-right: auto;
  margin-left: auto; }

.article-taxonomy-headding {
  text-align: left;
  color: #2D1C13;
  font-weight: bold;
  font-size: 1.6rem; }

.tags {
  list-style: none;
  margin-left: 0;
  padding-left: 0;
  margin-top: 0; }
  .tagsItem {
    display: inline; }
    .tagsItem::after {
      content: '/'; }
    .tagsItem:last-child::after {
      content: ''; }

figure {
  margin-right: 0;
  margin-left: 0; }

.mediaHolder {
  text-align: center; }

.mediaCaption {
  display: block;
  margin-top: 0.25em;
  text-align: center;
  color: #968e89;
  font-size: 75%; }

.media {
  margin-top: 2em;
  margin-bottom: 2em;
  width: 100%;
  text-align: center; }
  .media img {
    max-width: 100%; }
  .media-flexibleBounding {
    max-width: 100%; }
  .media-video {
    position: relative;
    height: 0;
    padding-bottom: 75%; }
    .media-videois-wide {
      padding-bottom: 56.25%; }
    .media-video iframe {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 100%; }

kbd {
  display: inline-block;
  min-width: 1em;
  margin: 0 0.25em;
  padding: 0.125em 0.25em 0.1em;
  border: 1px solid #eae8e7;
  border-radius: 3px;
  box-shadow: inset 0 -2px 0 rgba(0, 0, 0, 0.1);
  text-align: center;
  font-size: 87.5%;
  background-color: #fff; }

.code-comment {
  margin-bottom: 0; }
  .code-comment + pre {
    margin-top: 0.25em; }

.introductory {
  padding: 1em;
  border: 1px solid #e5e3e2;
  border-radius: 3px;
  background-color: #FFF; }
  .introductory_image {
    text-align: center; }
  .introductory_itemData_title {
    margin: 0.5em 0; }
  .introductory_itemData_detail {
    list-style: none;
    margin: 0;
    padding-left: 0; }
  .introductory_links {
    margin: 0;
    list-style: none;
    padding-left: 0; }
  @media screen and (min-width: 480px) {
    .introductory {
      display: -ms-flexbox;
      display: flex; }
      .introductory_image {
        text-align: left;
        margin-right: 1em; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
